{"version":3,"file":"membrane-invitations-service.js","sourceRoot":"","sources":["../src/membrane-invitations-service.ts"],"names":[],"mappings":"AAKA,MAAM,OAAO,0BAA0B;IACrC,YACY,UAAsB,EACtB,WAAW,sBAAsB;QADjC,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAyB;IAC1C,CAAC;IAEG,oBAAoB,CAAC,MAAsB;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEM,qBAAqB,CAC1B,eAAwB;QAExB,OAAO,IAAI,CAAC,QAAQ,CAAC,2BAA2B,EAAE,eAAe,CAAC,CAAC;IACrE,CAAC;IAEM,oBAAoB,CACzB,cAA8B,EAC9B,OAAoB,EACpB,aAAwC;QAExC,OAAO,IAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE;YAC9C,cAAc;YACd,OAAO;YACP,aAAa;SACd,CAAC,CAAC;IACL,CAAC;IAEM,gBAAgB;QAGrB,OAAO,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAEM,gBAAgB,CAAC,kBAA8B;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;IAChE,CAAC;IAEO,QAAQ,CAAC,OAAe,EAAE,OAAY;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;CACF","sourcesContent":["import { CellClient } from \"@holochain-open-dev/cell-client\";\nimport { HoloHashMap } from '@holochain-open-dev/utils';\nimport { MembraneProof, EntryHash, ActionHash, DnaHash, AgentPubKey } from \"@holochain/client\";\nimport { CloneDnaRecipe, JoinMembraneInvitation } from \"./types\";\n\nexport class MembraneInvitationsService {\n  constructor(\n    protected cellClient: CellClient,\n    protected zomeName = \"membrane_invitations\"\n  ) {}\n\n  public createCloneDnaRecipe(recipe: CloneDnaRecipe): Promise<EntryHash> {\n    return this.callZome(\"create_clone_dna_recipe\", recipe);\n  }\n\n  public getCloneRecipesForDna(\n    originalDnaHash: DnaHash\n  ): Promise<HoloHashMap<EntryHash, CloneDnaRecipe>> { // keys of type EntryHash\n    return this.callZome(\"get_clone_recipes_for_dna\", originalDnaHash);\n  }\n\n  public inviteToJoinMembrane(\n    cloneDnaRecipe: CloneDnaRecipe,\n    invitee: AgentPubKey,\n    membraneProof: MembraneProof | undefined\n  ): Promise<ActionHash> {\n    return this.callZome(\"invite_to_join_membrane\", {\n      cloneDnaRecipe,\n      invitee,\n      membraneProof,\n    });\n  }\n\n  public getMyInvitations(): Promise<\n    [ActionHash, JoinMembraneInvitation][] // keys of type ActionHash\n  > {\n    return this.callZome(\"get_my_invitations\", null);\n  }\n\n  public removeInvitation(invitationLinkHash: ActionHash): Promise<void> {\n    return this.callZome(\"remove_invitation\", invitationLinkHash);\n  }\n\n  private callZome(fn_name: string, payload: any) {\n    return this.cellClient.callZome(this.zomeName, fn_name, payload);\n  }\n}\n"]}